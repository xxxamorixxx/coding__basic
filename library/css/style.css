@charset "UTF-8";
/* ----------------------------------

01.share

------------------------------------- */
/* ----------------------------------

mixinでメディアクエリーを定義

------------------------------------- */
a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
nav,
object,
ol,
output,
p,
pre,
q,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-style: normal;
  font-weight: normal;
  font-size: 100%;
  vertical-align: baseline;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

* {
  box-sizing: border-box;
}

html {
  overflow-y: scroll;
}

blockquote,
q {
  quotes: none;
}

blockquote:after,
blockquote:before,
q:after,
q:before {
  content: '';
  content: none;
}

input,
textarea {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption,
th {
  text-align: left;
}

a:focus {
  outline: none;
}

.clearfix:after {
  content: ".";
  display: block;
  clear: both;
  height: 0;
  visibility: hidden;
}

.clearfix {
  min-height: 1px;
}

* html .clearfix {
  height: 1px;
  /*¥*/
  /*/
	height: auto;
	overflow: hidden;
	/**/
}

.both {
  clear: both;
}

.inline_block {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}

a {
  text-decoration: none;
  outline: none;
  color: inherit;
}

a:hover {
  text-decoration: underline;
}

img {
  vertical-align: top;
  max-width: 100%;
}

input {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  margin: 0;
  padding: 0;
  border: 0;
  border-radius: 0;
  background: none transparent;
  background-clip: padding-box;
  color: inherit;
  font-size: inherit;
  vertical-align: middle;
  box-sizing: border-box;
}

input::-ms-clear {
  display: none;
}

input::-ms-reveal {
  display: none;
}

input::-ms-expand {
  display: none;
}

/* ----------------------------------

mixinでメディアクエリーを定義

------------------------------------- */
html {
  font-size: 62.5%;
}

body {
  font-size: 10px;
  font-size: 1.0rem;
  font-family: 'Noto Sans', sans-serif;
}

.pc {
  display: none;
}

@media screen and (min-width: 992px) {
  .pc {
    display: inline-block;
  }
}

.tb {
  display: none;
}

@media screen and (min-width: 769px) and (max-width: 991px) {
  .tb {
    display: inline-block;
  }
}

.sp {
  display: none;
}

@media screen and (max-width: 768px) {
  .sp {
    display: inline-block;
  }
}

@media screen and (max-width: 575px) {
  .inner-sm {
    width: 94%;
  }
}

@media screen and (max-width: 768px) {
  .inner-md {
    width: 94%;
  }
}

@media screen and (max-width: 991px) {
  .inner-lg {
    width: 94%;
  }
}

@media screen and (max-width: 1199px) {
  .inner-xl {
    width: 94%;
  }
}

a img {
  opacity: 1;
  -webkit-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

a:hover img {
  opacity: 0.7;
}

a.blank[target="_blank"]::after {
  top: -1px;
  position: relative;
  font-weight: 400;
  font-family: "Font Awesome 5 Free";
  content: "\f2d2";
  margin-left: 0.5em;
  color: #666;
}

a.blank[target="_blank"]:hover::after {
  text-decoration: none;
}

/* ----------------------------------

mixinでメディアクエリーを定義

------------------------------------- */
/* ----------------------------------

01.view

------------------------------------- */

/*# sourceMappingURL=data:application/json;base64, */